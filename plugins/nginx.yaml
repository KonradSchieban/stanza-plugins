version: 0.0.7
title: Nginx
description: Log parser for Nginx
supported_platforms: 
  - linux
  - windows
  - macos
parameters:
  - name: enable_access_log
    label: Access Logs
    description: Enable to collect Nginx access logs
    type: bool
    default: true
  - name: access_log_path
    label: Access Log Path
    description: Path to access log file
    type: string
    default: "/var/log/nginx/access.log*"
    relevant_if:
      enable_access_log:
        equals: true
  - name: enable_error_log
    label: Error Logs
    description: Enable to collect Nginx error logs
    type: bool
    default: true
  - name: error_log_path
    label: Error Log Path
    description: Path to error log file
    type: string
    default: "/var/log/nginx/error.log*"
    relevant_if:
      enable_error_log:
        equals: true
  - name: start_at
    label: Start At
    description: Start reading file from 'beginning' or 'end'
    type: enum
    valid_values:
      - beginning
      - end
    default: end

# Set Defaults
# {{$enable_access_log := default true .enable_access_log}}
# {{$access_log_path := default "/var/log/nginx/access.log*" .access_log_path}}
# {{$enable_error_log := default true .enable_error_log}}
# {{$error_log_path := default "/var/log/nginx/error.log*" .error_log_path}}
# {{$start_at := default "end" .start_at}}

# Pipeline Template
pipeline:
  # {{ if $enable_access_log }}
  - id: nginx_access_reader
    type: file_input
    include:
      - '{{ $access_log_path }}'
    start_at: '{{ $start_at }}'
    labels:
      log_type: 'nginx.access'
      plugin_id: '{{ .id }}'
    output: access_regex_parser

  - id: access_regex_parser
    type: regex_parser
    regex: '(?P<remote_addr>[^\|]*)\|(?P<remote_user>[^\|]*)\|\[(?P<time_local>[^\]]+)\]\|"(?P<method>[A-Z]*)( )?(?P<path>\S*)( )?[^\"]*"\|(?P<status>[^\|]*)\|(?P<body_bytes_sent>[^\|]*)\|"(?P<http_referer>\S*)"\|"(?P<http_user_agent>[^"]*)"\|(?P<request_length>[^\|]*)\|(?P<request_time>[^\|]*)\|(?P<upstream_addr>[^\|]*)\|(?P<upstream_response_length>[^\|]*)\|(?P<upstream_response_time>[^\|]*)\|(?P<upstream_status>[^\|]*)\|\[(?P<proxy_add_x_forwarded_for>[^\]]*)\]\|(?P<bytes_sent>[^\|]*)\|(?P<time_iso8601>[^\|]*)\|(?P<upstream_connect_time>[^\|]*)\|(?P<upstream_header_time>[^\|]*)\|'
    timestamp:
      parse_from: time_local
      layout: '%d/%b/%Y:%H:%M:%S %z'
    severity:
      parse_from: status
      preserve_to: status
      mapping:
        info: 2xx
        notice: 3xx
        warning: 4xx
        error: 5xx
    output: {{ .output }}
  # {{ end }}

  # {{ if $enable_error_log }}
  - id: nginx_error_reader
    type: file_input
    include:
      - '{{ $error_log_path }}'
    start_at: '{{ $start_at }}'
    multiline:
      line_start_pattern: '\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} \[\w+\] (?P<pid>\d+).(?P<tid>\d+): '
    labels:
      log_type: 'nginx.error'
      plugin_id: '{{ .id }}'
    output: error_regex_parser

  - id: error_regex_parser
    type: regex_parser
    regex: '^(?P<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<log_level>\w+)\] (?P<pid>\d+).(?P<tid>\d+): (?P<message>.*)'
    timestamp:
      parse_from: time
      layout: '%Y/%m/%d %T'
    severity:
      parse_from: log_level
      mapping:
        critical: crit
        emergency: emerg
    output: {{ .output }}
  # {{ end }}

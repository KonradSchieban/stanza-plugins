version: 0.0.1
title: Nginx
description: Log parser for Nginx
parameters:
  access_log_path:
    label: Access Log Path
    description: Path to access log file
    type: string
    required: true
  error_log_path:
    label: Error Log Path
    description: Path to error log file
    type: string
  start_at:
    label: Start At
    description: Start reading file from 'beginning' or 'end'
    type: enum
    valid_values:
     - beginning
     - end
    default: end
pipeline:
  #{{ if .access_log_path }}
  - id: nginx_access_reader
    type: file_input
    include:
      - {{ .access_log_path }}
    start_at: {{ or .start_at "end" }}

  - id: access_regex_parser
    type: regex_parser
    regex: '^(?P<remote>[^ ]*) (?P<host>[^ ]*) (?P<user>[^ ]*) \[(?P<time>[^\]]*)\] "(?P<method>\S+)(?: +(?P<path>[^\"]*?)(?: +\S*)?)?" (?P<code>[^ ]*) (?P<size>[^ ]*)(?: "(?P<referer>[^\"]*)" "(?P<agent>[^\"]*)"(?:\s+(?P<http_x_forwarded_for>[^ ]+))?)?$'
    timestamp:
      parse_from: time
      layout: '%d/%b/%Y:%H:%M:%S %z'

  - id: access_add_log_name
    type: restructure
    ops:
      - add:
          field: $labels.log_name
          value: 'nginx.access'
    output: {{ .output }}
  #{{ end }}

  #{{ if .error_log_path }}
  - id: nginx_error_reader
    type: file_input
    include:
      - {{ .error_log_path }}
    start_at: {{ or .start_at "end" }}
    multiline:
      line_start_pattern: '\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} \[\w+\] (?P<pid>\d+).(?P<tid>\d+): '

  - id: error_regex_parser
    type: regex_parser
    regex: '^(?P<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<log_level>\w+)\] (?P<pid>\d+).(?P<tid>\d+): (?P<message>.*)'
    timestamp:
      parse_from: time
      layout: '%Y/%m/%d %T'
    severity:
      parse_from: log_level
      mapping:
        critical: crit
        emergency: emerg

  - id: error_add_log_name
    type: restructure
    ops:
      - add:
          field: $labels.log_name
          value: 'nginx.error'
    output: {{ .output }}
  #{{ end }}

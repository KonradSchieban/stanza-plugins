# Plugin Info
version: 0.0.4
title: VMware ESXi
description: Log parser for VMware ESXi
parameters:
  - name: listen_address
    label: Listen Address
    description: A syslog address of the form `<ip>:<port>`
    type: string
    default: "0.0.0.0:5140"

# Set Defaults
# {{$listen_address := default "0.0.0.0:5140" .listen_address}}

# Pipeline Template
pipeline:
  - id: esxi_input
    type: tcp_input
    listen_address: {{ $listen_address }}
    labels:
      log_type: vmware_esxi
      plugin_id: {{ .id }}
    output:
      - timestamp_router
      - file_output_raw
  - id: timestamp_router
    type: router
    default: {{ .output }}
    routes:
      - expr: '$record matches "^(<(?P<priority>[\\d]*)>)?(?P<timestamp>[a-zA-z]+ \\d{2} \\d{2}:\\d{2}:\\d{2}).*"'
        output: esxi_parser_1
      - expr: '$record matches "^(<(?P<priority>[\\d]*)>)?(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d+Z) (?P<hostname>[^ ]+) (?P<service>[^:]+):.*"'
        output: esxi_parser_2
      - expr: '$record matches "^(<(?P<priority>[\\d]*)>)?(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z) (?P<hostname>[^ ]+) (?P<service>[^:]*):.*"'
        output: esxi_parser_3
      - expr: '$record matches "^(<(?P<priority>[\\d]*)>)?(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z) (?P<hostname>[^ ]+) (?P<service>[^\\[]*)\\[(?P<pid>[^\\]]*)\\]:.*"'
        output: esxi_parser_4
      - expr: '$record matches "^(<(?P<priority>[\\d]*)>)?(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d+[+-]\\d{2}:\\d{2}) (?P<hostname>[^ ]+) (?P<service>[^:]*)(\\[(?P<pid>[^\\]]*)\\]:)?.*"'
        output: esxi_parser_5

  - id: esxi_parser_1
    type: regex_parser
    regex: '^(<(?P<priority>[\d]*)>)?(?P<timestamp>[a-zA-z]+ \d{2} \d{2}:\d{2}:\d{2}) (?P<hostname>[^ ]+) (?P<service>[^:]+) (?P<message>.*)'
    timestamp:
      parse_from: timestamp
      layout: '%b %d %H:%M:%S'
    output: {{ .output }}

  - id: esxi_parser_2
    type: regex_parser
    regex: '^(<(?P<priority>[\d]*)>)?(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z) (?P<hostname>[^ ]+) (?P<service>[^:]+): (?P<message>.*)'
    timestamp:
      parse_from: timestamp
      layout: '%Y-%m-%dT%H:%M:%S.%LZ'
    output: {{ .output }}

  - id: esxi_parser_3
    type: regex_parser
    regex: '^(<(?P<priority>[\d]*)>)?(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z) (?P<hostname>[^ ]+) (?P<service>[^:]*): (?P<message>.*)'
    timestamp:
      parse_from: timestamp
      layout: '%Y-%m-%dT%H:%M:%SZ'
    output: {{ .output }}

  - id: esxi_parser_4
    type: regex_parser
    regex: '^(<(?P<priority>[\d]*)>)?(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z) (?P<hostname>[^ ]+) (?P<service>[^\[]*)\[(?P<pid>[^\]]*)\]: (?P<message>.*)'
    timestamp:
      parse_from: timestamp
      layout: '%Y-%m-%dT%H:%M:%SZ'
    output: {{ .output }}

  - id: esxi_parser_5
    type: regex_parser
    regex: '^(<(?P<priority>[\d]*)>)?(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+[+-]\d{2}:\d{2}) (?P<hostname>[^ ]+) (?P<service>[^:]*)(\[(?P<pid>[^\]]*)\])?: (?P<message>.*)'
    timestamp:
      parse_from: timestamp
      layout: '%Y-%m-%dT%H:%M:%S.%L%j'
    output: {{ .output }}

  - id: file_output_raw
    type: file_output
    path: /opt/observiq-agent/log/raw.log

